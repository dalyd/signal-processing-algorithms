buildvariants:
  - display_name: Ubuntu 16.04
    name: ubuntu1604
    run_on:
      - ubuntu1604-test
    tasks:
      - name: unit_tests
      - name: linting_and_formatting
      - name: deploy
functions:
  create virtualenv:
    - command: shell.exec
      params:
        working_dir: project
        script: |
          ./scripts/create_virtualenv ${pypi_user} ${pypi_password} ${pypi_url}'/simple'
  deploy:
    - command: shell.exec
      params:
        working_dir: project
        script: |
          set -o errexit
          . venv/bin/activate


          if [ "${is_patch}" = "true" ]; then
            # Do not deploy on patches.
            exit 0
          fi

          scripts/deploy.sh ${pypi_user} ${pypi_password} 'https://'${pypi_url}
pre:
  - command: git.get_project
    params:
      directory: project
  - func: create virtualenv
post:
  - command: attach.xunit_results
    params:
      file: project/test_output_junit.xml
tasks:
  - name: unit_tests
    commands:
      - command: shell.exec
        params:
          working_dir: project
          script: |
            . venv/bin/activate
            pytest tests --cov=signal_processing_algorithms --cov-fail-under=90 --cov-branch --cov-report=term-missing --junitxml=test_output_junit.xml
  - name: linting_and_formatting
    commands:
      - command: shell.exec
        params:
          working_dir: project
          script: |
            . venv/bin/activate
            pytest src --flake8 --black --pydocstyle --mypy
  - name: deploy
    depends_on:
      - name: unit_tests
      - name: linting_and_formatting
    patchable: false
    commands:
      - func: deploy